# docker-compose.yml

version: "3.8"

services:
    authors-service:
        # build: ./app
        image: cfeliot/app-author_py:1
        volumes:
            - .:/app
        environment:
            - DATABASE_URL=postgresql://postgres:postgres@db:5432/distribuida
            - SERVER_PORT=8080
        depends_on:
            - db
        labels:
            - "traefik.http.routers.authors.rule=PathPrefix(`/app2`)"
            - "traefik.http.middlewares.authors.stripprefix.prefixes=/app2"
            - "traefik.http.routers.authors.middlewares=authors"
        expose:
            - 8080
    db:
        image: arm64v8/postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        expose:
            - 5432
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=distribuida
    db-mongo:
        image: mongo
        ports:
            - 27017:27017
        # volumes:
        #     - taskdb:/data/db

    books-service:
        image: jaimesalvador/app-books:1.0.0
        environment:
            DB_CONNECTION_USER: postgres
            DB_CONNECTION_PASSWORD: postgres
            DB_CONNECTION_URL: jdbc:postgresql://postgres-sql:5432/distribuida
            SERVER_PORT: 7001
            AUTHOR_URL: http://proxy/app2
            TRACING_HOST: tracing
        depends_on:
            - db-mongo
        deploy:
            replicas: 1
        expose:
            - 7001
        labels:
            - "traefik.http.routers.books.rule=PathPrefix(`/app1`)"
            - "traefik.http.middlewares.books.stripprefix.prefixes=/app1"
            - "traefik.http.routers.books.middlewares=books"
    proxy:
        image: traefik:v2.9.6
        command: --api.insecure=true --providers.docker
        ports:
            - "80:80"
            - "8080:8080"
        expose:
            - 80
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    tracing:
        image: jaegertracing/all-in-one
        ports:
            - "16686:16686"
            - "14250:14250"
volumes:
    postgres_data:
